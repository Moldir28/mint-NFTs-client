{"version":3,"sources":["assets/twitter-logo.svg","Loading/Loading.js","App.js","index.js"],"names":["Loading","class","TWITTER_HANDLE","TWITTER_LINK","CONTRACT_ADDRESS","App","useState","currentAccount","setCurrentAccount","isLoading","setIsLoading","checkIfWalletIsConnected","a","window","ethereum","console","log","alert","request","method","accounts","length","account","setupEventListener","connectWallet","provider","ethers","providers","Web3Provider","signer","getSigner","connectedContract","Contract","MyEpicNft","abi","chainId","on","from","tokenId","toNumber","askContractToMintNft","makeAnEpicNFT","nftTxn","wait","hash","useEffect","className","onClick","style","marginTop","href","target","alt","src","twitterLogo","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15722e31.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/twitter-logo.a8a75254.svg\";","import React from 'react';\nimport './Loading.css'\n\nfunction Loading() {\n    return (   \n            <div class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\n    )\n}\n\nexport default Loading\n","import './styles/App.css';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport React, {useEffect, useState} from \"react\";\nimport { ethers } from \"ethers\";\nimport MyEpicNft from './utils/MyEpicNFT.json'\nimport Loading from './Loading/Loading.js'\n\n// Constants\nconst TWITTER_HANDLE = '_buildspace';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n// const OPENSEA_LINK = '';\n// const TOTAL_MINT_COUNT = 15;\n\nconst CONTRACT_ADDRESS = \"0x5d8Cb2db9f30fa80B7a06b7a50A5C940d5E8AD79\";\n\nconst App = () => {\nconst [currentAccount, setCurrentAccount] = useState(\"\");\nconst [isLoading, setIsLoading] = useState(false)\n\n\n\nconst checkIfWalletIsConnected = async () => {\n  const {ethereum} = window; \n  if(!ethereum) {\n    alert(\"Make sure you connected your Metamask\")\n  } else {\n    console.log(\"We have an ethereum object\", ethereum)\n  }\n\n /*\n    * Check if we're authorized to access the user's wallet\n */\nconst accounts =  await ethereum.request({ method: 'eth_accounts' });\n\nif(accounts.length !== 0) {\n  const account = accounts[0];\n  console.log(\"Found an authorized account\", account)\n  setCurrentAccount(account);\n  setupEventListener();\n} else {\n  console.log(\"No authorized account\");\n}\n};\n\nconst connectWallet = async() => {\n  try {\n    const {ethereum} = window;\n    if(!ethereum) {\n      alert(\"Get Metamask account\");\n      return;\n    }\n    const accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n    setIsLoading(true)\n    console.log(\"Connected\", accounts[0]);\n    setCurrentAccount(accounts[0]);\n    \n    setupEventListener()\n\n\n  } catch(error) {\n    console.log(error);\n  }\n  setIsLoading(false);\n};\n\nconst setupEventListener = async() => {\n  try {\n    const {ethereum} = window; \n   \n   if(ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, MyEpicNft.abi, signer);\n\n\nlet chainId = await ethereum.request({ method: 'eth_chainId' });\nconsole.log(\"Connected to chain \" + chainId);\n\n// String, hex code of the chainId of the Rinkebey test network\nconst rinkebyChainId = \"0x4\"; \nif (chainId !== rinkebyChainId) {\n\talert(\"You are not connected to the Rinkeby Test Network!\");\n}\n\n      connectedContract.on(\"NewEpicNFTMinted\", (from, tokenId)=> {\n        console.log(from, tokenId.toNumber())\n        alert(`Hey there! We've minted your NFT and sent it to your wallet.It may be blank right now. It can take a max of 10 min to show up on OpenSea. Here's the link: https://testnets.opensea.io/assets/${CONTRACT_ADDRESS}/${tokenId.toNumber()}`)\n      });\n\n\n    console.log(\"Setup Event Listener\")\n   } else {\n     console.log(\"Ethereum object doesnt exist\");\n   } \n  } catch(error) {\n    console.log(error);\n  }\n}\n\nconst askContractToMintNft = async() => {\ntry {\n  const {ethereum} = window;\n\n  if(ethereum) {\n    const provider = new ethers.providers.Web3Provider(ethereum);\n    const signer = provider.getSigner();\n    // creates connection to our contract\n    const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, MyEpicNft.abi, signer);\n\nconsole.log(\"Going to pop wallet to pay gas...\");\nlet nftTxn = await connectedContract.makeAnEpicNFT();\n\nconsole.log(\"Mining... please wait.\")\nsetIsLoading(true);\n\nawait nftTxn.wait();\n\nconsole.log(`Mined, see transaction: https://rinkeby.etherscan.io/tx/${nftTxn.hash}`);\n}\nelse {\n  console.log(\"Ethereum object doesnt exist\")\n} \n} catch (error) {\n  console.log(error);\n}\nsetIsLoading(false); \n}\n\n\n\n  // Render Methods\n  const renderNotConnectedContainer = () => (\n    <button  onClick={connectWallet} className=\"cta-button connect-wallet-button\">\n      Connect to Wallet\n    </button>\n  );\n\n  useEffect(() => {\n    checkIfWalletIsConnected()\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header-container\">\n          <p className=\"header gradient-text\">My NFT Collection</p>\n          <p className=\"sub-text\">\n            Each unique. Each beautiful. Discover your NFT today.\n          </p>\n          {currentAccount === \"\" ? (renderNotConnectedContainer()) : (\n            <button onClick={askContractToMintNft} className =\"cta-button connect-wallet-button\">Mint NFT</button>\n          )}\n          <div style={{marginTop: \"20px\"}}>\n          <button className=\"cta-button opensea-button\"><a href=\"https://testnets.opensea.io/collection/squarenft-kc4js2ewjw\" target=\"_blank\">ðŸŒŠ View Collection on OpenSea </a></button>\n          </div>\n          <div>\n          {isLoading && <Loading />}\n          </div>\n        </div>\n        <div className=\"footer-container\">\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n          <a\n            className=\"footer-text\"\n            href={TWITTER_LINK}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >{`built with @${TWITTER_HANDLE}`}</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}