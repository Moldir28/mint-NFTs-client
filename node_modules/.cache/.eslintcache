[{"/Users/moldyr/Desktop/My projects/GIT Projects/epic-nfts-client/src/index.js":"1","/Users/moldyr/Desktop/My projects/GIT Projects/epic-nfts-client/src/App.js":"2","/Users/moldyr/Desktop/My projects/GIT Projects/epic-nfts-client/src/Loading/Loading.js":"3"},{"size":226,"mtime":1638178527034,"results":"4","hashOfConfig":"5"},{"size":5003,"mtime":1638184554591,"results":"6","hashOfConfig":"5"},{"size":209,"mtime":1638183439891,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yl86mi",{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/moldyr/Desktop/My projects/GIT Projects/epic-nfts-client/src/index.js",[],"/Users/moldyr/Desktop/My projects/GIT Projects/epic-nfts-client/src/App.js",["15","16"],"import './styles/App.css';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport React, {useEffect, useState} from \"react\";\nimport { ethers } from \"ethers\";\nimport MyEpicNft from './utils/MyEpicNFT.json'\nimport Loading from './Loading/Loading.js'\n\n// Constants\nconst TWITTER_HANDLE = '_buildspace';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n// const OPENSEA_LINK = '';\n// const TOTAL_MINT_COUNT = 15;\n\nconst CONTRACT_ADDRESS = \"0x5d8Cb2db9f30fa80B7a06b7a50A5C940d5E8AD79\";\n\nconst App = () => {\nconst [currentAccount, setCurrentAccount] = useState(\"\");\nconst [isLoading, setIsLoading] = useState(false)\n\n\n\nconst checkIfWalletIsConnected = async () => {\n  const {ethereum} = window; \n  if(!ethereum) {\n    alert(\"Make sure you connected your Metamask\")\n  } else {\n    console.log(\"We have an ethereum object\", ethereum)\n  }\n\n /*\n    * Check if we're authorized to access the user's wallet\n */\nconst accounts =  await ethereum.request({ method: 'eth_accounts' });\n\nif(accounts.length !== 0) {\n  const account = accounts[0];\n  console.log(\"Found an authorized account\", account)\n  setCurrentAccount(account);\n  setupEventListener();\n} else {\n  console.log(\"No authorized account\");\n}\n};\n\nconst connectWallet = async() => {\n  try {\n    const {ethereum} = window;\n    if(!ethereum) {\n      alert(\"Get Metamask account\");\n      return;\n    }\n    const accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n    setIsLoading(true)\n    console.log(\"Connected\", accounts[0]);\n    setCurrentAccount(accounts[0]);\n    \n    setupEventListener()\n\n\n  } catch(error) {\n    console.log(error);\n  }\n  setIsLoading(false);\n};\n\nconst setupEventListener = async() => {\n  try {\n    const {ethereum} = window; \n   \n   if(ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, MyEpicNft.abi, signer);\n\n\nlet chainId = await ethereum.request({ method: 'eth_chainId' });\nconsole.log(\"Connected to chain \" + chainId);\n\n// String, hex code of the chainId of the Rinkebey test network\nconst rinkebyChainId = \"0x4\"; \nif (chainId !== rinkebyChainId) {\n\talert(\"You are not connected to the Rinkeby Test Network!\");\n}\n\n      connectedContract.on(\"NewEpicNFTMinted\", (from, tokenId)=> {\n        console.log(from, tokenId.toNumber())\n        alert(`Hey there! We've minted your NFT and sent it to your wallet.It may be blank right now. It can take a max of 10 min to show up on OpenSea. Here's the link: https://testnets.opensea.io/assets/${CONTRACT_ADDRESS}/${tokenId.toNumber()}`)\n      });\n\n\n    console.log(\"Setup Event Listener\")\n   } else {\n     console.log(\"Ethereum object doesnt exist\");\n   } \n  } catch(error) {\n    console.log(error);\n  }\n}\n\nconst askContractToMintNft = async() => {\ntry {\n  const {ethereum} = window;\n\n  if(ethereum) {\n    const provider = new ethers.providers.Web3Provider(ethereum);\n    const signer = provider.getSigner();\n    // creates connection to our contract\n    const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, MyEpicNft.abi, signer);\n\nconsole.log(\"Going to pop wallet to pay gas...\");\nlet nftTxn = await connectedContract.makeAnEpicNFT();\n\nconsole.log(\"Mining... please wait.\")\nsetIsLoading(true);\n\nawait nftTxn.wait();\n\nconsole.log(`Mined, see transaction: https://rinkeby.etherscan.io/tx/${nftTxn.hash}`);\n}\nelse {\n  console.log(\"Ethereum object doesnt exist\")\n} \n} catch (error) {\n  console.log(error);\n}\nsetIsLoading(false); \n}\n\n\n\n  // Render Methods\n  const renderNotConnectedContainer = () => (\n    <button  onClick={connectWallet} className=\"cta-button connect-wallet-button\">\n      Connect to Wallet\n    </button>\n  );\n\n  useEffect(() => {\n    checkIfWalletIsConnected()\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header-container\">\n          <p className=\"header gradient-text\">My NFT Collection</p>\n          <p className=\"sub-text\">\n            Each unique. Each beautiful. Discover your NFT today.\n          </p>\n          {currentAccount === \"\" ? (renderNotConnectedContainer()) : (\n            <button onClick={askContractToMintNft} className =\"cta-button connect-wallet-button\">Mint NFT</button>\n          )}\n          <div style={{marginTop: \"20px\"}}>\n          <button className=\"cta-button opensea-button\"><a href=\"https://testnets.opensea.io/collection/squarenft-kc4js2ewjw\" target=\"_blank\">ðŸŒŠ View Collection on OpenSea </a></button>\n          </div>\n          <div>\n          {isLoading && <Loading />}\n          </div>\n        </div>\n        <div className=\"footer-container\">\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n          <a\n            className=\"footer-text\"\n            href={TWITTER_LINK}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >{`built with @${TWITTER_HANDLE}`}</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","/Users/moldyr/Desktop/My projects/GIT Projects/epic-nfts-client/src/Loading/Loading.js",[],{"ruleId":"17","severity":1,"message":"18","line":140,"column":6,"nodeType":"19","endLine":140,"endColumn":8,"suggestions":"20"},{"ruleId":"21","severity":1,"message":"22","line":154,"column":57,"nodeType":"23","messageId":"24","endLine":154,"endColumn":143,"fix":"25"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkIfWalletIsConnected'. Either include it or remove the dependency array.","ArrayExpression",["26"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"27","text":"28"},{"desc":"29","fix":"30"},[4476,4476]," rel=\"noreferrer\"","Update the dependencies array to be: [checkIfWalletIsConnected]",{"range":"31","text":"32"},[3788,3790],"[checkIfWalletIsConnected]"]